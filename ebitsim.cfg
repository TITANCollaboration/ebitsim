[Output]

# You must choose either matplotlib for a graph or csv for a.. well.. csv file..
outputType = matplotlib
outputFileName = /vagrant/testing_Xsections/Ga72_40kev_2000mA_mod4.png

#outputType = csv
#outputFileName = mycsv.csv

#outputType = rates
#outputFileName = /vagrant/testingrates.csv


[matPlotLib]
# Using these you can specify the xmin and xmax (time) for graphing so you can kind of zoom in or ignore parts same for yaxis with the population
# You can also choose linear (0) or log (1) scale for the x-axis
graphXMinTime = 0.01
graphXMaxTime = 4.0
#graphYMinPop = 0.1
#graphYMaxPop = 0.25
graphXScale = 1


[Run]
# For any species listed on this line there must be a corresponding entry for it below with z, nucleons, etc..
# It was easier to program this way AND you don't have to comment out species you want to keep!
# I hope you have a non-frustrating day!

# speciesList should be comma separated
speciesList = Ga72

#This will be the order it runs the beams, note it runs these sequentially
beamList = BeamAndTrap

#this doesn't exist yet..
autoOptimizer = off
optimizeChargeState = 49

[BeamAndTrap]
beamEnergy = 40000
breedingTime = 2.0
probeEvery = 0.0001
ionEbeamOverlap = 1.0
beamCurrent = 2.0
beamRadius = 50.0e-4
pressure = 3e-10
ionTemperature = 100.0

# ONLY THE BEAM ENERGY AND BREEDING TIME ARE ADJUSTED IN SUBSEQUENT ENTRIES, the rest are dummy parameters for anything besides the first beam in beamList

[Mo98]
z = 42
nucleons = 98
chargeStates = 36, 37, 38, 39, 40, 41, 42
populationPercent = 1.0

[Y98]
z=39
nucleons=98
chargeStates = 34, 35, 36, 37, 38, 39
populationPercent = 1.0

[Ga72]
z = 31
nucleons = 72
chargeStates = 25, 26, 27, 28, 29, 30, 31
populationPercent = 1.0

[Ar36]
z = 18
nucleons = 36
chargeStates = 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18
populationPercent = 1.0
